name: Continuous Delivery

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  install:
    name: Install dependencies
    runs-on: ubuntu-latest

    steps:
      - name: Download code from GitHub
        uses: actions/checkout@v4.1.1

      - name: Install pnpm package manager
        uses: pnpm/action-setup@v2.4.0
        with:
          version: 8.14.1

      - name: Set up Node.js version
        uses: actions/setup-node@v4.0.1
        with:
          node-version-file: .nvmrc
          cache: pnpm

      - name: Install dependencies specified in package.json
        run: |
          pnpm install
          pnpm ls --recursive

  lint:
    name: Lint code
    runs-on: ubuntu-latest
    needs: install

    steps:
      - name: Download code from GitHub
        uses: actions/checkout@v4.1.1

      - name: Install pnpm package manager
        uses: pnpm/action-setup@v2.4.0
        with:
          version: 8.14.1

      - name: Set up Node.js version
        uses: actions/setup-node@v4.0.1
        with:
          node-version-file: .nvmrc
          cache: pnpm

      - name: Install dependencies specified in package.json
        run: |
          pnpm install

      - name: Run the lint script in package.json scripts
        run: |
          pnpm run --if-present lint

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: install

    steps:
      - name: Download code from GitHub
        uses: actions/checkout@v4.1.1

      - name: Install pnpm package manager
        uses: pnpm/action-setup@v2.4.0
        with:
          version: 8.14.1

      - name: Set up Node.js version
        uses: actions/setup-node@v4.0.1
        with:
          node-version-file: .nvmrc
          cache: pnpm

      - name: Install dependencies specified in package.json
        run: |
          pnpm install

      - name: Run the build script in package.json scripts
        env:
          BASE_URL: "/gebruikersonderzoeken/"
        run: |
          pnpm run --if-present build

      - name: Upload the results from the build step
        uses: actions/upload-artifact@v4.1.0
        with:
          name: website
          path: build/
          retention-days: 1

  publish-website:
    name: Publish website
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Download code from GitHub
        uses: actions/checkout@v4.1.1

      - name: Download the results from the "Build" job
        uses: actions/download-artifact@v4.1.1
        with:
          name: website
          path: build/

      - name: Continuous Deployment to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4.5.0
        with:
          branch: gh-pages
          folder: build/

  # publish-npm:
  #   runs-on: ubuntu-latest
  #   needs: [lint, test]
  #   if: github.ref == 'refs/heads/main'

  #   steps:
  #     - name: Checkout release branch
  #       uses: actions/checkout@v3
  #       with:
  #         token: ${{ secrets.GH_TOKEN }}

  #     - name: Set up Node.js version
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: "18.14.x"

  #     - uses: pnpm/action-setup@v2.0.1
  #       name: Install pnpm
  #       id: pnpm-install
  #       with:
  #         version: 7
  #         run_install: false

  #     - name: Get pnpm store directory
  #       id: pnpm-cache
  #       run: |
  #         echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

  #     - uses: actions/cache@v3
  #       name: Setup pnpm cache
  #       with:
  #         path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
  #         key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
  #         restore-keys: |
  #           ${{ runner.os }}-pnpm-store-

  #     - name: "Continuous Deployment: install"
  #       run: |
  #         pnpm install
  #         pnpm ls --recursive

  #     - name: "Continuous Deployment: build"
  #       run: |
  #         pnpm run --if-present build

  #     - name: "Continuous Deployment: publish to GitHub repository"
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
  #         GIT_AUTHOR_EMAIL: ${{ secrets.GIT_AUTHOR_EMAIL }}
  #         GIT_AUTHOR_NAME: "NL Design System"
  #         GIT_COMMITTER_EMAIL: ${{ secrets.GIT_COMMITTER_EMAIL }}
  #         GIT_COMMITTER_NAME: "NL Design System"
  #       run: |
  #         git push --set-upstream origin HEAD
  #         pnpm run release

  #     - name: "Continuous Deployment: publish to npm"
  #       env:
  #         NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
  #       run: |
  #         pnpm config set "//registry.npmjs.org/:_authToken" "${NPM_TOKEN}"
  #         pnpm run publish
  #         pnpm config delete "//registry.npmjs.org/:_authToken"
