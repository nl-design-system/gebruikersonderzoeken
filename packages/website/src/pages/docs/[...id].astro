---
import { Breadcrumb } from '@components/breadcrumb/breadcumb';
import { ContentWrapper } from '@components/content-wrapper/content-wrapper';
import { RespondToOnderzoek } from '@components/respond-to-onderzoek/respond-to-onderzoek';
import { TagList } from '@components/tag-list/tag-list';
import Layout from '@layouts/default.astro';
import { Menu } from '@nl-design-system-community/ma-components/local/menu/index.tsx';
import { getTags } from '@utils/tags';
import { getCollection, render } from 'astro:content';
import { getEntries } from 'astro:content';
import { getMenuItems, getCurrentMenuItems, toCleanRoute } from '../../utils/menu';

const menuItems = getMenuItems(Astro.url);
const currentMenuItems = getCurrentMenuItems(menuItems);

// 1. Generate a new path for every collection entry
export async function getStaticPaths() {
  const onderzoeken = await getCollection('onderzoeken')
    .then((onderzoeken) =>
      onderzoeken.map((onderzoek) => {
        const id = toCleanRoute(onderzoek.id);

        return {
          ...onderzoek,
          id,
        };
      }),
    )
    .then();

  return onderzoeken.map((onderzoek) => ({
    params: { id: onderzoek.id },
    props: { onderzoek },
  }));
}

// 2. For your template, you can get the entry directly from the prop
const { onderzoek } = Astro.props;
const { Content, remarkPluginFrontmatter } = await render(onderzoek);
const cover = onderzoek.data.cover ?? remarkPluginFrontmatter['cover'];
const filePath = onderzoek.filePath;
const tags = await getTags(onderzoek.data.tags);

let themes = await getEntries(onderzoek.data.themes || []);

/** Astro should do this check, but as of now, it does not. See https://github.com/withastro/astro/issues/13268 */
// @ts-expect-error - themes can contain an undefined value if a wrong value is provided
if (themes.includes(undefined)) {
  throw new Error(`The themes in ${onderzoek.id} contain an invalid value`);
}
---

<Layout canonical={Astro.url} title={onderzoek.data.title} cover={cover}>
  <Menu items={menuItems} />
  <Breadcrumb items={currentMenuItems} />
  <TagList tags={tags} />
  <ContentWrapper>
    <Content />
  </ContentWrapper>
  <RespondToOnderzoek filePath={filePath} />
</Layout>
