---
import { Breadcrumb } from '@components/breadcrumb/breadcumb';
import Layout from '@layouts/default.astro';
import { Menu } from '@nl-design-system-community/ma-components/local/menu/index.tsx';
import { getCollection, render } from 'astro:content';
import { getMenuItems, getCurrentMenuItems } from '../../utils/menu';

const menuItems = getMenuItems(Astro.url);
const currentMenuItems = getCurrentMenuItems(menuItems);

// 1. Generate a new path for every collection entry
export async function getStaticPaths() {
  const onderzoeken = await getCollection('onderzoeken')
    .then((onderzoeken) =>
      onderzoeken.map((onderzoek) => {
        const id = onderzoek.id
          // The docs folder has one folder with a space in it. Astro slugifies
          // that, but Docusaurus left that as is. We need to convert urls to
          // that folder back to the legacy way of working to keep the urls the
          // same
          .replace('5-18-jaar-worden', '5-18-jaar worden')

          // Transform README routes to index routes
          .replace('/readme', '');

        return {
          ...onderzoek,
          id,
        };
      }),
    )
    .then();

  return onderzoeken.map((onderzoek) => ({
    params: { id: onderzoek.id },
    props: { onderzoek },
  }));
}

// 2. For your template, you can get the entry directly from the prop
const { onderzoek } = Astro.props;
const { Content, remarkPluginFrontmatter } = await render(onderzoek);
const cover = onderzoek.data.cover ?? remarkPluginFrontmatter['cover'];
---

<Layout canonical={Astro.url} title={onderzoek.data.title} cover={cover}>
  <Menu items={menuItems} />
  <Breadcrumb items={currentMenuItems} />
  <Content />
</Layout>
