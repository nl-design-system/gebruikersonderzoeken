---
import { CoverSchema, type Cover } from 'src/schemas/cover.ts';
import { type Page as Props } from 'src/schemas/page.ts';

// Validates object ensuring it conforms to the Cover schema.
const isCover = (maybeCover: unknown): maybeCover is Cover => {
  const result = CoverSchema.safeParse(maybeCover);
  return result.success;
};

const fallbackCover = {
  alt: 'Grafisch vergrootglas over document',
  url: new URL('/placeholder.png', Astro.url).toString(),
};

const { cover: pageCover, description: pageDescription, title: pageTitle = 'gebruikersonderzoeken' } = Astro.props;

const lang = 'nl';
const title = `${pageTitle} | Gebruikersonderzoeken`;
const description = pageDescription ?? 'Gedeelde gebruikersonderzoeken voor de overheid';
const canonical = Astro.url.href;
const cover = isCover(pageCover) ? pageCover : fallbackCover;
---

<html lang={lang} dir="ltr" class="ma-theme">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    <title>{title}</title>
    <meta name="description" content={description} />

    <link rel="canonical" href={canonical} />

    <link rel="icon" type="image/png" href="/favicon-96x96.png" sizes="96x96" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link rel="shortcut icon" href="/favicon.ico" />
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
    <meta name="apple-mobile-web-app-title" content="MyWebSite" />

    <meta name="color-scheme" content="light only" />
    <meta name="theme-color" content="#ffffff" />
    <link rel="manifest" href="/site.webmanifest" />

    <!-- OpenGraph data -->
    <meta property="og:url" content={canonical} />
    <meta property="og:locale" content={lang} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    {cover && <meta property="og:image" content={cover.url} />}
    {cover && <meta property="og:image:alt" content={cover.alt} />}

    <!-- X -->
    <meta name="twitter:card" content="summary_large_image" />
    {cover && <meta property="twitter:image" content={cover.url} />}
    {cover && <meta property="twitter:image:alt" content={cover.alt} />}
  </head>
  <body>
    <slot />
  </body>
</html>
